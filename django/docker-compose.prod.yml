version: '3.8'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - rabbitmq
      - celery
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - postgres_data_backups:/var/lib/postgresql/data/backups/
    env_file:
      - ./.env.prod.db
  
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web

  rabbitmq:
    image: rabbitmq:3.11.9-management
    hostname: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/data/
    ports:
      - "0.0.0.0:5672:5672"
      - "0.0.0.0:15672:15672"

  celery:
    build: ./app 
    restart: always
    command: celery -A YourDjangoProject worker -l INFO 
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - rabbitmq

volumes:
  postgres_data:
  postgres_data_backups: 
  rabbitmq_data: 
  static_volume:
  media_volume:

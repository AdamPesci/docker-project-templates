version: '3.8'

services:
  web:
    build: ./app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - rabbitmq
      - celery
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - postgres_data_backups:/var/lib/postgresql/data/backups/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/data/

  rabbitmq:
    image: rabbitmq:3.11.9-management
    hostname: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/data/
    ports:
      - "0.0.0.0:5672:5672"
      - "0.0.0.0:15672:15672"

  celery:
    build: ./app 
    restart: always
    command: celery -A config worker --pool=solo -l INFO
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - rabbitmq

  pgAdmin:
      container_name: pgadmin4
      image: dpage/pgadmin4
      restart: always
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com
        PGADMIN_DEFAULT_PASSWORD: root
      ports:
        - "5050:80"
      tty: true

volumes:
  postgres_data: 
  postgres_data_backups: 
  pgadmin_data: 
  rabbitmq_data: 
